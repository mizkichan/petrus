{"version":3,"sources":["../package.json","index.js"],"names":["module","exports","app","Elm","Main","init","flags","repositoryUrl","package","repository","url","title","name","description","window","addEventListener","ev","ports","error","send","toString","canvas","document","createElement","context","getContext","image","Image","width","height","drawImage","imageData","getImageData","data","Array","from","imageDecoded","decodeImage","subscribe","uri","src"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB;AACf,UAAQ,QADO;AAEf,ACFF,iBDEiB,iBAFA;AAGf,gBAAc;AACZ,ACHJ,YDGY,KADI;AAEZ,WAAO;AAFK,GAHC;AAOf,aAAW;AACT,ACLJ,IAAMC,GAAG,GAAGC,GDKC,OCLGC,IAAJ,CAASC,IAAT,CAAc,YDIb;AAET,ACLFC,EAAAA,KAAK,EAAE,IDKI,gEAFA;AAGT,ACLAC,IAAAA,SDKS,ICLI,EAAEC,ODEN,UCFcC,UAAR,CAAmBC,GAD7B;ADOL,ACLAC,IAAAA,KAAK,SDKS,CACZ,ECNQH,iBAAQI,IAAb,SDKS,CAJL,MCDmBJ,iBAAQK,WAA/B;ADQL,ACVK,eDUM;AAPF,ACJa,CAAd,CAAZ,CDHiB;AAgBf,qBAAmB;AACjB,ACPJC,MAAM,CAACC,QDOQ,QADM,ACNrB,CAAwB,OAAxB,EAAiC,UAAAC,EAAE,EAAI;ADQnC,ACPFd,EAAAA,GAAG,CAACe,KAAJ,CAAUC,IDOI,CCPd,CAAgBC,IAAhB,CAAqBH,CDKF,CCLI,CAACE,KAAH,CAASE,QAAT,EAArB;ADQE,ACPH,CAFD,wBDSyB,QAHJ;AAIjB,ACNJ,IAAMC,MAAM,GAAGC,QAAQ,CDMD,ACNEC,SDEH,ICFN,CAAuB,QAAvB,CAAf;ADOI,ACNJ,IAAMC,OAAO,CDMD,ECNIH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;ADCqB,ACArB,GDhBiB,CCgBXC,KAAK,GAAG,IAAIC,KAAJ,EAAd;ADOE,ACLFD,KAAK,CAACX,YDKY,ICLlB,CAAuB,MAAvB,EAA+B,YAAM;ADMjC,ACNiC,MAC3Ba,KAD2B,EDMxB,CCLeF,KADS,CAC3BE,KAD2B;ADKnB,ACLmB,GDlBpB,GCmBAC,MADoB,GACTH,KADS,CACpBG,MADoB;ADQnC,ACNAR,EAAAA,MAAM,CAACO,IDMI,CCNX,GAAeA,KAAf;ADpBe,ACqBfP,CDrBF,CCqBEA,MAAM,CAACQ,MAAP,GAAgBA,MAAhB;AACAL,EAAAA,OAAO,CAACM,SAAR,CAAkBJ,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BE,KAA/B,EAAsCC,MAAtC;AACA,MAAME,SAAS,GAAGP,OAAO,CAACQ,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BJ,KAA3B,EAAkCC,MAAlC,CAAlB;AACA,MAAMI,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWJ,SAAS,CAACE,IAArB,CAAb;AACA/B,EAAAA,GAAG,CAACe,KAAJ,CAAUmB,YAAV,CAAuBjB,IAAvB,CAA4B;AAAES,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,MAAM,EAANA,MAAT;AAAiBI,IAAAA,IAAI,EAAJA;AAAjB,GAA5B;AACD,CARD;AAUA/B,GAAG,CAACe,KAAJ,CAAUoB,WAAV,CAAsBC,SAAtB,CAAgC,UAAAC,GAAG,EAAI;AACrCb,EAAAA,KAAK,CAACc,GAAN,GAAYD,GAAZ;AACD,CAFD,GAIA","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["module.exports = {\n  \"name\": \"Petrus\",\n  \"description\": \"A Piet compiler\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/mizkichan/petrus\"\n  },\n  \"scripts\": {\n    \"start\": \"parcel serve src/index.html\",\n    \"build\": \"parcel build -- --public-url . --no-source-maps src/index.html\",\n    \"clean\": \"rm -rf dist\",\n    \"prepublish\": [\n      \"npm run clean && npm run build\"\n    ],\n    \"publish\": \"gh-pages -d dist\"\n  },\n  \"devDependencies\": {\n    \"elm-hot\": \"^1.1.2\",\n    \"gh-pages\": \"^2.1.1\",\n    \"node-elm-compiler\": \"^5.0.4\",\n    \"parcel-bundler\": \"^1.12.3\",\n    \"sass\": \"^1.22.12\"\n  },\n  \"dependencies\": {\n    \"bulma\": \"^0.7.5\"\n  },\n  \"private\": true\n}\n;","import { Elm } from \"./Main.elm\";\nimport package from \"../package.json\";\n\nconst app = Elm.Main.init({\n  flags: {\n    repositoryUrl: package.repository.url,\n    title: `${package.name} - ${package.description}`\n  }\n});\n\nwindow.addEventListener(\"error\", ev => {\n  app.ports.error.send(ev.error.toString());\n});\n\nconst canvas = document.createElement(\"canvas\");\nconst context = canvas.getContext(\"2d\");\nconst image = new Image();\n\nimage.addEventListener(\"load\", () => {\n  const { width, height } = image;\n  canvas.width = width;\n  canvas.height = height;\n  context.drawImage(image, 0, 0, width, height);\n  const imageData = context.getImageData(0, 0, width, height);\n  const data = Array.from(imageData.data);\n  app.ports.imageDecoded.send({ width, height, data });\n});\n\napp.ports.decodeImage.subscribe(uri => {\n  image.src = uri;\n});\n\n// vim: set ts=2 sw=2 et:\n"]}