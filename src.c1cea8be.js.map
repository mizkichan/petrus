{"version":3,"sources":["../package.json","index.js"],"names":["module","exports","name","description","repository","type","url","scripts","start","prebuild","build","clean","prepublish","publish","devDependencies","rimraf","sass","dependencies","bulma","private","app","Elm","Main","init","flags","repositoryUrl","package","title","window","addEventListener","ev","ports","error","send","toString","canvas","document","createElement","context","getContext","image","Image","width","height","drawImage","imageData","getImageData","data","Array","from","imageDecoded","decodeImage","subscribe","uri","src"],"mappings":";;;AAAAA,OAAOC,QAAQ,CAACC,KAAK,SAASC,YAAY,kBAAkBC,WAAW,CAACC,KAAK,MAAMC,IAAI,uCAAuCC,QAAQ,CAACC,MAAM,8BAA8BC,SAAS,gBAAgBC,MAAM,iEAAiEC,MAAM,cAAcC,WAAW,gBAAgBC,QAAQ,oBAAoBC,gBAAgB,CAAW,UAAA,SAAoB,WAAA,SAA6B,oBAAA,SAA0B,iBAAA,UAAUC,OAAO,SAASC,KAAK,YAAYC,aAAa,CAACC,MAAM,UAAUC,SAAQ;;ACgC7gB,aAhCA,IAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,oBA+BA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA7BA,IAAMC,EAAMC,EAAIC,IAAAA,KAAKC,KAAK,CACxBC,MAAO,CACLC,cAAeC,EAAQtB,QAAAA,WAAWE,IAClCqB,MAAUD,GAAAA,OAAAA,EAAQxB,QAAAA,KAAUwB,OAAAA,OAAAA,EAAQvB,QAAAA,gBAIxCyB,OAAOC,iBAAiB,QAAS,SAAAC,GAC/BV,EAAIW,MAAMC,MAAMC,KAAKH,EAAGE,MAAME,cAGhC,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAUH,EAAOI,WAAW,MAC5BC,EAAQ,IAAIC,MAElBD,EAAMX,iBAAiB,OAAQ,WACrBa,IAAAA,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OACfR,EAAOO,MAAQA,EACfP,EAAOQ,OAASA,EAChBL,EAAQM,UAAUJ,EAAO,EAAG,EAAGE,EAAOC,GAChCE,IAAAA,EAAYP,EAAQQ,aAAa,EAAG,EAAGJ,EAAOC,GAC9CI,EAAOC,MAAMC,KAAKJ,EAAUE,MAClC3B,EAAIW,MAAMmB,aAAajB,KAAK,CAAES,MAAAA,EAAOC,OAAAA,EAAQI,KAAAA,MAG/C3B,EAAIW,MAAMoB,YAAYC,UAAU,SAAAC,GAC9Bb,EAAMc,IAAMD","file":"src.c1cea8be.js","sourceRoot":"../src","sourcesContent":["module.exports={name:\"Petrus\",description:\"A Piet compiler\",repository:{type:\"git\",url:\"https://github.com/mizkichan/petrus\"},scripts:{start:\"parcel serve src/index.html\",prebuild:\"npm run clean\",build:\"parcel build -- --public-url . --no-source-maps src/index.html\",clean:\"rimraf dist\",prepublish:\"npm run build\",publish:\"gh-pages -d dist\"},devDependencies:{\"elm-hot\":\"^1.1.2\",\"gh-pages\":\"^2.1.1\",\"node-elm-compiler\":\"^5.0.4\",\"parcel-bundler\":\"^1.12.3\",rimraf:\"^3.0.0\",sass:\"^1.22.12\"},dependencies:{bulma:\"^0.7.5\"},private:!0};","import { Elm } from \"./Main.elm\";\nimport package from \"../package.json\";\n\nconst app = Elm.Main.init({\n  flags: {\n    repositoryUrl: package.repository.url,\n    title: `${package.name} - ${package.description}`\n  }\n});\n\nwindow.addEventListener(\"error\", ev => {\n  app.ports.error.send(ev.error.toString());\n});\n\nconst canvas = document.createElement(\"canvas\");\nconst context = canvas.getContext(\"2d\");\nconst image = new Image();\n\nimage.addEventListener(\"load\", () => {\n  const { width, height } = image;\n  canvas.width = width;\n  canvas.height = height;\n  context.drawImage(image, 0, 0, width, height);\n  const imageData = context.getImageData(0, 0, width, height);\n  const data = Array.from(imageData.data);\n  app.ports.imageDecoded.send({ width, height, data });\n});\n\napp.ports.decodeImage.subscribe(uri => {\n  image.src = uri;\n});\n\n// vim: set ts=2 sw=2 et:\n"]}