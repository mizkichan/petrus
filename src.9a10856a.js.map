{"version":3,"sources":["src/index.js"],"names":["app","Elm","Main","init","node","document","querySelector","ports","decodeImage","subscribe","uri","canvas","createElement","context","getContext","image","Image","src","decode","then","width","height","drawImage","imageData","getImageData","data","y","x","slice","r","g","b","push","imageDecoded","send","catch","err","message"],"mappings":";;;AA6BA,aA7BA,IAAA,EAAA,QAAA,cA6BA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA3BA,IAAMA,EAAMC,EAAIC,IAAAA,KAAKC,KAAK,CAAEC,KAAMC,SAASC,cAAc,UAEzDN,EAAIO,MAAMC,YAAYC,UAAU,SAAAC,GACxBC,IAAAA,EAASN,SAASO,cAAc,UAChCC,EAAUF,EAAOG,WAAW,MAC5BC,EAAQ,IAAIC,MAClBD,EAAME,IAAMP,EACZK,EACGG,SACAC,KAAK,WACIC,IAAAA,EAAkBL,EAAlBK,MAAOC,EAAWN,EAAXM,OACfV,EAAOS,MAAQA,EACfT,EAAOU,OAASA,EAChBR,EAAQS,UAAUP,EAAO,EAAG,EAAGK,EAAOC,GAGjC,IAFCE,IAAAA,EAAYV,EAAQW,aAAa,EAAG,EAAGJ,EAAOC,GAC9CI,EAAO,GACJC,EAAI,EAAGA,EAAIL,IAAUK,EACvB,IAAA,IAAIC,EAAI,EAAGA,EAAIP,IAASO,EAAG,CACZJ,IADY,EAAA,EACZA,EAAUE,KAAKG,MAAwB,GAAjBD,EAAID,EAAIN,IADlB,GACvBS,EADuB,EAAA,GACpBC,EADoB,EAAA,GACjBC,EADiB,EAAA,GAE9BN,EAAKO,KAAK,CAAEL,EAAAA,EAAGD,EAAAA,EAAGG,EAAAA,EAAGC,EAAAA,EAAGC,EAAAA,IAG5B/B,EAAIO,MAAM0B,aAAaC,KAAK,CAAEd,MAAAA,EAAOC,OAAAA,EAAQI,KAAAA,MAE9CU,MAAM,SAAAC,GAAOpC,OAAAA,EAAIO,MAAM0B,aAAaC,KAAKE,EAAIC","file":"src.9a10856a.js","sourceRoot":"..","sourcesContent":["import { Elm } from \"./Main.elm\";\n\nconst app = Elm.Main.init({ node: document.querySelector(\"main\") });\n\napp.ports.decodeImage.subscribe(uri => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const image = new Image();\n  image.src = uri;\n  image\n    .decode()\n    .then(() => {\n      const { width, height } = image;\n      canvas.width = width;\n      canvas.height = height;\n      context.drawImage(image, 0, 0, width, height);\n      const imageData = context.getImageData(0, 0, width, height);\n      const data = [];\n      for (let y = 0; y < height; ++y) {\n        for (let x = 0; x < width; ++x) {\n          const [r, g, b] = imageData.data.slice((x + y * width) * 4);\n          data.push({ x, y, r, g, b });\n        }\n      }\n      app.ports.imageDecoded.send({ width, height, data });\n    })\n    .catch(err => app.ports.imageDecoded.send(err.message));\n});\n\n// vim: set ts=2 sw=2 et:\n"]}